name: Run Flask Server on GitHub Runner

on: [push, pull_request]

jobs:
  run_flask:
    runs-on: ubuntu-latest  # Runs on GitHub's cloud server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Fetch repo files
        with:
          fetch-depth: 0  # Fetches all history for all branches and tags

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install coverage pytest pytest-cov

      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=eyaljoseph_learn_git_actions
            -Dsonar.organization=eyaljoseph
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=.
            -Dsonar.python.version=3.10

      # # SonarQube Scan Step
      # - name: SonarQube Scan
      #   uses: SonarSource/sonarcloud-github-action@v2
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Your SonarCloud token
      #     SONAR_HOST_URL: https://sonarcloud.io  # If using SonarCloud
      #   with:
      #     args: >
      #       -Dsonar.projectKey=${{ secrets.SONARQUBE_PROJECT_KEY }}
      #       -Dsonar.projectName=${{ secrets.SONARQUBE_PROJECT_NAME }}
      #       -Dsonar.organization=${{ secrets.SONARQUBE_ORGANIZATION }}
      #       -Dsonar.branch.name=main

      # Veracode Scan Step
      # - name: Veracode Static Analysis Scan
      #   uses: veracode/scan-action@v2  # Veracode GitHub Action
      #   with:
      #     api-id: ${{ secrets.VERACODE_API_ID }}  # Veracode API ID (secret)
      #     api-key: ${{ secrets.VERACODE_API_KEY }}  # Veracode API Key (secret)
      #     file: "requirements.txt"  # Specify the file or folder to scan, adjust as needed
      #     scan-type: "static"  # Scan type (static, dynamic, etc.)

      - name: Run Flask Server
        run: |
          python main.py &  # Start Flask in the background
          sleep 5  # Give Flask some time to start

      - name: Debug  # Added debug step
        run: |
          cat /var/log/syslog | grep python
          ps aux | grep python

      - name: Test Flask Server
        run: curl http://127.0.0.1:8080  # Access Flask on port 8080
