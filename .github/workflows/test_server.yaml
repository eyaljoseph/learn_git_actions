name: Run Flask Server on GitHub Runner

on: [push, pull_request]

jobs:
  run_flask:
    runs-on: ubuntu-latest  # Runs on GitHub's cloud server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Fetch repo files

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt  # Install Flask

      # SonarQube Scan Step
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2  # Using SonarQube GitHub Action
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}  # Your SonarQube token should be added as a secret
        with:
          sonar-project-key: ${{ secrets.SONARQUBE_PROJECT_KEY }}  # Replace with your SonarQube project key
          sonar-project-name: ${{ secrets.SONARQUBE_PROJECT_NAME }}  # Replace with your SonarQube project name

      # # Veracode Scan Step
      # - name: Veracode Static Analysis Scan
      #   uses: veracode/scan-action@v2  # Veracode GitHub Action
      #   with:
      #     api-id: ${{ secrets.VERACODE_API_ID }}  # Veracode API ID (secret)
      #     api-key: ${{ secrets.VERACODE_API_KEY }}  # Veracode API Key (secret)
      #     file: "requirements.txt"  # Specify the file or folder to scan, adjust as needed
      #     scan-type: "static"  # Scan type (static, dynamic, etc.)

      - name: Run Flask Server
        run: |
          python main.py &  # Start Flask in the background
          sleep 5  # Give Flask some time to start

      - name: Debug  # Added debug step
        run: |
          cat /var/log/syslog | grep python
          ps aux | grep python

      - name: Test Flask Server
        run: curl http://127.0.0.1:8080  # Access Flask on port 8080
