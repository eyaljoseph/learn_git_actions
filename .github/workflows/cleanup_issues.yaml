name: Delete Closed Issues

on:
  schedule:
    # Runs every 2 minutes
    - cron: '*/2 * * * *'
  workflow_dispatch: # Allows manual triggering for testing

jobs:
  delete-closed-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Delete closed issues
        uses: actions/github-script@v7
        with:
          # Use a PAT with repo scope for better permissions
          github-token: ${{ secrets.ISSUE_DELETE_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            
            console.log(`Starting deletion process for repository ${owner}/${repo}`);
            
            try {
              // Get all closed issues
              const closedIssues = await github.paginate(github.rest.issues.listForRepo, {
                owner,
                repo,
                state: 'closed',
                per_page: 100
              });
              
              console.log(`Found ${closedIssues.length} closed issues to process`);
              
              // Delete each closed issue using GraphQL API
              for (const issue of closedIssues) {
                try {
                  // Skip pull requests (they appear in issues API but can't be deleted the same way)
                  if (issue.pull_request) {
                    console.log(`Skipping PR #${issue.number} (not an issue)`);
                    continue;
                  }
                  
                  const deleteQuery = `
                    mutation {
                      deleteIssue(input: {issueId: "${issue.node_id}"}) {
                        clientMutationId
                      }
                    }
                  `;
                  
                  await github.graphql(deleteQuery);
                  console.log(`Successfully deleted issue #${issue.number}: ${issue.title}`);
                } catch (error) {
                  console.error(`Failed to delete issue #${issue.number}: ${error.message}`);
                }
              }
            } catch (error) {
              console.error(`Workflow failed: ${error.message}`);
            }