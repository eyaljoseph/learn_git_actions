name: Docker Build and Push

on:
  workflow_run:
    workflows: ["Run Flask Server on GitHub Runner"]
    types:
      - completed

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/learn_git_actions:latest .

      - name: Run Trivy vulnerability scanner
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/learn_git_actions:latest
          trivy image --format table --output trivy-results.txt ${{ secrets.DOCKER_USERNAME }}/learn_git_actions:latest
        continue-on-error: true  # Allow workflow to continue even if vulnerabilities are found

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/learn_git_actions:latest

      - name: Notify Slack
        uses: ravsamhq/notify-slack-action@be814b201e233b2dc673608aa46e5447c8ab13f2 # 2.5.0
        if: always()
        with:
          status: ${{ job.status }}
          message_format: |
            {emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>
            Author: ${{ github.event.head_commit.author.name }}
            Message: ${{ github.event.head_commit.message }}
            Vulnerabilities:
            ```$(cat trivy-results.txt)```
          footer: "<{run_url}|View Run>"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
