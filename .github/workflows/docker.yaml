name: Docker Build and Push

on:
  workflow_run:
    workflows: 
      - "Run Flask Server on GitHub Runner"
      - "Python Linting"
    types:
      - completed  # Triggers when the test workflow finishes

jobs:
  check-workflows:
    runs-on: ubuntu-latest
    outputs:
      all_success: ${{ steps.check.outputs.all_success }}
    steps:
      - name: Check workflow results
        id: check
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const requiredWorkflows = [
              "Run Flask Server on GitHub Runner",
              "Python Linting"
            ];
            
            let allSuccess = true;
            
            for (const workflow of requiredWorkflows) {
              console.log(`Checking workflow: ${workflow}`);
              if (context.payload.workflow_run.name === workflow) {
                if (context.payload.workflow_run.conclusion !== 'success') {
                  allSuccess = false;
                  console.log(`${workflow} failed or didn't complete successfully`);
                  break;
                }
              }
            }
            
            core.setOutput('all_success', allSuccess.toString());

  docker-build-push:
    needs: check-workflows
    if: needs.check-workflows.outputs.all_success == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Checks out the latest code

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Sets up Docker Buildx for multi-platform builds

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Store your Docker Hub username in GitHub secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Store your Docker Hub password in GitHub secrets

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/learn_git_actions:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/learn_git_actions:latest
